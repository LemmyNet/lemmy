---
kind: pipeline
name: amd64

platform:
  os: linux
  arch: amd64

steps:

  # use minimum supported rust version for most steps
  - name: prepare repo
    image: clux/muslrust:1.64.0
    commands:
      - git fetch --tags
      - git submodule init
      - git submodule update --recursive --remote
      - chown 1000:1000 . -R

  - name: check formatting
    image: rustdocker/rust:nightly
    commands:
      - /root/.cargo/bin/cargo fmt -- --check

  # latest rust for clippy to get extra checks
  # when adding new clippy lints, make sure to also add them in scripts/fix-clippy.sh
  - name: cargo clippy
    image: rust:1.65-buster
    commands:
      - apt-get update
      - apt-get -y install protobuf-compiler libprotobuf-dev
      - rustup component add clippy
      - cargo clippy --workspace --tests --all-targets --all-features -- 
          -D warnings -D deprecated -D clippy::perf -D clippy::complexity 
          -D clippy::dbg_macro -D clippy::inefficient_to_string 
          -D clippy::items-after-statements -D clippy::implicit_clone 
          -D clippy::wildcard_imports -D clippy::cast_lossless 
          -D clippy::manual_string_new -D clippy::redundant_closure_for_method_calls
      - cargo clippy --workspace --all-features -- -D clippy::unwrap_used

  - name: cargo test
    image: clux/muslrust:1.64.0
    environment:
      LEMMY_DATABASE_URL: postgres://lemmy:password@database:5432/lemmy
      LEMMY_CONFIG_LOCATION: ../../config/config.hjson
      RUST_BACKTRACE: 1
      RUST_TEST_THREADS: 1
    commands:
      - apt-get update
      - apt-get -y install --no-install-recommends postgresql-client protobuf-compiler libprotobuf-dev
      - cargo test --workspace --no-fail-fast --all-features

  - name: check defaults.hjson updated
    image: clux/muslrust:1.64.0
    commands:
      - ./scripts/update_config_defaults.sh config/defaults_current.hjson
      - diff config/defaults.hjson config/defaults_current.hjson

  - name: check with different features
    image: clux/muslrust:1.64.0
    commands:
      - cargo install cargo-workspaces
      - cargo workspaces exec cargo check --no-default-features
      - cargo workspaces exec cargo check --all-features

  - name: lemmy_api_common doesnt depend on diesel
    image: rust:1.64-buster
    commands:
      - "! cargo tree -p lemmy_api_common --no-default-features -i diesel"

  - name: cargo build
    image: clux/muslrust:1.64.0
    commands:
      - cargo build
      - mv target/x86_64-unknown-linux-musl/debug/lemmy_server target/lemmy_server

  - name: run federation tests
    image: node:alpine
    environment:
      LEMMY_DATABASE_URL: postgres://lemmy:password@database:5432
      DO_WRITE_HOSTS_FILE: 1
    commands:
      - apk add bash curl postgresql-client
      - bash api_tests/prepare-drone-federation-test.sh
      - cd api_tests/
      - yarn
      - yarn api-test

  - name: nightly build
    image: plugins/docker
    settings:
      dockerfile: docker/dev/Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: dessalines/lemmy
      tags:
        - dev
    when:
      event:
        - cron

  - name: publish release docker image
    image: plugins/docker
    settings:
      dockerfile: docker/prod/Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: dessalines/lemmy
      auto_tag: true
      auto_tag_suffix: linux-amd64
    when:
      ref:
        - refs/tags/*

  - name: publish release docker manifest
    image: plugins/manifest
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      target: "dessalines/lemmy:${DRONE_TAG}"
      template: "dessalines/lemmy:${DRONE_TAG}-OS-ARCH"
      platforms:
        - linux/amd64
        - linux/arm64
      ignore_missing: true
    when:
      ref:
        - refs/tags/*

  - name: publish latest release docker manifest
    image: plugins/manifest
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      target: "dessalines/lemmy:latest"
      template: "dessalines/lemmy:${DRONE_TAG}-OS-ARCH"
      platforms:
        - linux/amd64
        - linux/arm64
      ignore_missing: true
    when:
      ref:
        - refs/tags/*

  # using https://github.com/pksunkara/cargo-workspaces
  - name: publish to crates.io
    image: rustlang/rust:nightly
    environment:
      CARGO_TOKEN:
        from_secret: cargo_api_token
    commands:
      - cargo install cargo-workspaces
      - cp -r migrations crates/db_schema/
      - cargo login "$CARGO_TOKEN"
      - cargo workspaces publish --from-git --allow-dirty --allow-branch "${DRONE_TAG}" --yes custom "${DRONE_TAG}"
    when:
      ref:
        - refs/tags/*

services:
  - name: database
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: lemmy
      POSTGRES_PASSWORD: password

---
kind: pipeline
name: arm64

platform:
  os: linux
  arch: arm64

steps:

  - name: prepare repo
    image: rust:1.57-slim
    user: root
    commands:
      - chown 1000:1000 . -R
      - apt update
      - apt install --no-install-recommends --yes git
      - git fetch --tags
      - git submodule init
      - git submodule update --recursive --remote

  # TODO temporarily disable arm tests
  # - name: cargo test
  #   image: rust:1.57-slim
  #   environment:
  #     LEMMY_DATABASE_URL: postgres://lemmy:password@database:5432/lemmy
  #     LEMMY_CONFIG_LOCATION: ../../config/config.hjson
  #     RUST_BACKTRACE: 1
  #     RUST_TEST_THREADS: 1
  #   commands:
  #     - apt-get update
  #     - apt-get -y install --no-install-recommends postgresql-client libssl-dev pkg-config libpq-dev
  #     - cargo test --workspace --no-fail-fast
  #     - cargo build

  # TODO temporarily disable arm tests
  # Using Debian here because there seems to be no official Alpine-based Rust docker image for ARM.
  # - name: cargo build
  #   image: rust:1.57-slim
  #   commands:
  #     - apt-get update
  #     - apt-get -y install --no-install-recommends libssl-dev pkg-config libpq-dev
  #     - cargo build
  #     - mv target/debug/lemmy_server target/lemmy_server

  # TODO temporarily disable arm tests
  # - name: run federation tests
  #   image: node:16-slim
  #   environment:
  #     LEMMY_DATABASE_URL: postgres://lemmy:password@database:5432
  #     DO_WRITE_HOSTS_FILE: 1
  #   commands:
  #     - mkdir -p /usr/share/man/man1 /usr/share/man/man7
  #     - apt-get update
  #     - apt-get -y install --no-install-recommends bash curl libssl-dev pkg-config libpq-dev postgresql-client libc6-dev
  #     - bash api_tests/prepare-drone-federation-test.sh
  #     - cd api_tests/
  #     - yarn
  #     - yarn api-test

  - name: publish release docker image
    image: plugins/docker
    settings:
      dockerfile: docker/prod/Dockerfile.arm
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: dessalines/lemmy
      auto_tag: true
      auto_tag_suffix: linux-arm64
    when:
      ref:
        - refs/tags/*

  - name: publish release docker manifest
    image: plugins/manifest
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      target: "dessalines/lemmy:${DRONE_TAG}"
      template: "dessalines/lemmy:${DRONE_TAG}-OS-ARCH"
      platforms:
        - linux/amd64
        - linux/arm64
      ignore_missing: true
    when:
      ref:
        - refs/tags/*

  - name: publish latest release docker manifest
    image: plugins/manifest
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      target: "dessalines/lemmy:latest"
      template: "dessalines/lemmy:${DRONE_TAG}-OS-ARCH"
      platforms:
        - linux/amd64
        - linux/arm64
      ignore_missing: true
    when:
      ref:
        - refs/tags/*

# TODO temporarily disable arm tests
# services:
#   - name: database
#     image: postgres:12-alpine
#     environment:
#       POSTGRES_USER: lemmy
#       POSTGRES_PASSWORD: password
