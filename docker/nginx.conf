set_real_ip_from  10.0.0.0/8;
set_real_ip_from  172.16.0.0/12;
set_real_ip_from  192.168.0.0/16;
real_ip_header    X-Forwarded-For;
real_ip_recursive on;

map_hash_bucket_size 128;

upstream lemmy {
    # this needs to map to the lemmy (server) docker service hostname
    server lemmy:8536;
}

upstream lemmy-ui {
    # this needs to map to the lemmy-ui docker service hostname
    server lemmy-ui:1234;
}

map $http_accept $accept_proxpass {
    default "http://lemmy-ui";
    "application/activity+json" "http://lemmy";
    'application/ld+json; profile="https://www.w3.org/ns/activitystreams"' "http://lemmy";
}

map $request_method $proxpass {
    default       $accept_proxpass;
    POST          "http://lemmy";
}

proxy_cache_path /dev/shm/cache keys_zone=static:1m;

server {
    # this is the port inside docker, not the public one yet
    listen 1236;
    listen 8536;
    # change if needed, this is facing the public web
    server_name _;
    server_tokens off;

    gzip on;
    gzip_types text/css application/javascript image/svg+xml;
    gzip_vary on;

    # Upload limit, relevant for pictrs
    client_max_body_size 20M;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    proxy_connect_timeout 10s;

    # frontend general requests
    location / {
        proxy_pass $proxpass;

        rewrite ^(.+)/+$ $1 permanent;

        # Send actual client IP upstream
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # backend
    location ~ ^/(api|pictrs|feeds|nodeinfo|.well-known) {
        proxy_pass "http://lemmy";
        # proxy common stuff
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Send actual client IP upstream
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    include /etc/nginx/conf.d/prod.d/*;
}
